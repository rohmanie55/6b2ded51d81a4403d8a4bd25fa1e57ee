version: "3.8"

networks:
  app:
    driver: bridge

services:
  webserver:
    build:
      context: ${APP_PATH}/docker/php-apache
    image: app-webserver
    container_name: app-webserver
    networks:
      - app
    ports:
      - ${WEBSERVER_PORT}:80
      - ${WEBSERVER_PORT_SSL}:443
    volumes:
      - ${APP_PATH}/www:/var/www/html
      - ${APP_PATH}/logs/webserver:/var/log/apache:rw${MOUNT_OPTIONS}
      - ${APP_PATH}/logs/scheduler:/var/log/scheduler:rw${MOUNT_OPTIONS}
    env_file:
      - ${APP_PATH}/.env
    depends_on:
      - pgsql
  pgsql:
    image: postgres:${PGSQL_VERSION}
    container_name: app-pgsql
    networks:
      - app
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - ${DB_PORT}:5432
    volumes:
      - pgsql-data:/var/lib/postgresql/data
      - ${APP_PATH}/logs/pgsql:/var/log/postgresql:rw${MOUNT_OPTIONS}
      - ${APP_PATH}/www/database/init.sql:/docker-entrypoint-initdb.d/init.sql
  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION}
    container_name: app-rabbitmq
    networks:
      - app
    restart: on-failure
    ports:
      - ${RABBITMQ_PORT_ADMIN}:15672
      - ${RABBITMQ_PORT}:5672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - ${APP_PATH}/logs/rabbitmq/logs/:/var/log/rabbitmq:rw${MOUNT_OPTIONS}
      - rabbitmq-data:/var/lib/rabbitmq/mnesia
  mailhog:
    image: mailhog/mailhog
    container_name: 'app-mailhog'
    networks:
      - app
    ports:
      - "8025:8025"
volumes:
  pgsql-data:
    driver: "local"
  rabbitmq-data:
    driver: "local"
